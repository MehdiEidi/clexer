[
	{
		"Type": "COMMENT",
		"Literal": " SPDX-License-Identifier: GPL-2.0\r",
		"Row": 1,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Filesystem-level keyring for fscrypt\r\n *\r\n * Copyright 2019 Google LLC\r\n ",
		"Row": 6,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * This file implements management of fscrypt master keys in the\r\n * filesystem-level keyring, including the ioctls:\r\n *\r\n * - FS_IOC_ADD_ENCRYPTION_KEY\r\n * - FS_IOC_REMOVE_ENCRYPTION_KEY\r\n * - FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS\r\n * - FS_IOC_GET_ENCRYPTION_KEY_STATUS\r\n *\r\n * See the \"User API\" section of Documentation/filesystems/fscrypt.rst for more\r\n * information about these ioctls.\r\n ",
		"Row": 19,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 21,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "include",
		"Row": 21,
		"Col": 7,
		"BlockNo": 0
	},
	{
		"Type": "\u003c",
		"Literal": "\u003c",
		"Row": 21,
		"Col": 9,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "crypto",
		"Row": 21,
		"Col": 15,
		"BlockNo": 0
	},
	{
		"Type": "/",
		"Literal": "/",
		"Row": 21,
		"Col": 16,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "skcipher",
		"Row": 21,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 21,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "h",
		"Row": 21,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "\u003e",
		"Literal": "\u003e",
		"Row": 21,
		"Col": 26,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 22,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "include",
		"Row": 22,
		"Col": 7,
		"BlockNo": 0
	},
	{
		"Type": "\u003c",
		"Literal": "\u003c",
		"Row": 22,
		"Col": 9,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "linux",
		"Row": 22,
		"Col": 14,
		"BlockNo": 0
	},
	{
		"Type": "/",
		"Literal": "/",
		"Row": 22,
		"Col": 15,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 22,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 22,
		"Col": 19,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 22,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 22,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "h",
		"Row": 22,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "\u003e",
		"Literal": "\u003e",
		"Row": 22,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 23,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "include",
		"Row": 23,
		"Col": 7,
		"BlockNo": 0
	},
	{
		"Type": "\u003c",
		"Literal": "\u003c",
		"Row": 23,
		"Col": 9,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "linux",
		"Row": 23,
		"Col": 14,
		"BlockNo": 0
	},
	{
		"Type": "/",
		"Literal": "/",
		"Row": 23,
		"Col": 15,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "random",
		"Row": 23,
		"Col": 21,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 23,
		"Col": 21,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "h",
		"Row": 23,
		"Col": 22,
		"BlockNo": 0
	},
	{
		"Type": "\u003e",
		"Literal": "\u003e",
		"Row": 23,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 24,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "include",
		"Row": 24,
		"Col": 7,
		"BlockNo": 0
	},
	{
		"Type": "\u003c",
		"Literal": "\u003c",
		"Row": 24,
		"Col": 9,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "linux",
		"Row": 24,
		"Col": 14,
		"BlockNo": 0
	},
	{
		"Type": "/",
		"Literal": "/",
		"Row": 24,
		"Col": 15,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_file",
		"Row": 24,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 24,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "h",
		"Row": 24,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "\u003e",
		"Literal": "\u003e",
		"Row": 24,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 26,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "include",
		"Row": 26,
		"Col": 7,
		"BlockNo": 0
	},
	{
		"Type": "TEXT",
		"Literal": "fscrypt_private.h",
		"Row": 26,
		"Col": 27,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 28,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 28,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "wipe_master_key_secret",
		"Row": 28,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 28,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 28,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 28,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 28,
		"Col": 69,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 28,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 28,
		"Col": 76,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 29,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_destroy_hkdf",
		"Row": 30,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 30,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 30,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 30,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 30,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "hkdf",
		"Row": 30,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 30,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 30,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memzero_explicit",
		"Row": 31,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 31,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 31,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 31,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 31,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 31,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 31,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 31,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 31,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 31,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 31,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 32,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 34,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 34,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "move_master_key_secret",
		"Row": 34,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 34,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 34,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 34,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 34,
		"Col": 69,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dst",
		"Row": 34,
		"Col": 72,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 34,
		"Col": 73,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 35,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 35,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 35,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "src",
		"Row": 35,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 35,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 36,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memcpy",
		"Row": 37,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 37,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dst",
		"Row": 37,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 37,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "src",
		"Row": 37,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 37,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 37,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 37,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 37,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dst",
		"Row": 37,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 37,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 37,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 37,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memzero_explicit",
		"Row": 38,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 38,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "src",
		"Row": 38,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 38,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 38,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 38,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 38,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "src",
		"Row": 38,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 38,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 38,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 38,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 39,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 41,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 41,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "free_master_key",
		"Row": 41,
		"Col": 27,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 41,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 41,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 41,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 41,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 41,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 41,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 42,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size_t",
		"Row": 43,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 43,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 43,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "wipe_master_key_secret",
		"Row": 45,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 45,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 45,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 45,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 45,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 45,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 45,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 45,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "FLOAT",
		"Literal": "for",
		"Row": 47,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 47,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 47,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 47,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 47,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 47,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 47,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "\u003c=",
		"Literal": "\u003c=",
		"Row": 47,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MODE_MAX",
		"Row": 47,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 47,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 47,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "++",
		"Literal": "++",
		"Row": 47,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 47,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 47,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_destroy_prepared_key",
		"Row": 48,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 48,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 48,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 48,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 48,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_direct_keys",
		"Row": 48,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 48,
		"Col": 57,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 48,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 48,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 48,
		"Col": 60,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 48,
		"Col": 61,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_destroy_prepared_key",
		"Row": 49,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 49,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 49,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 49,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 49,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_iv_ino_lblk_",
		"Row": 49,
		"Col": 57,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "64",
		"Row": 49,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_keys",
		"Row": 49,
		"Col": 64,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 49,
		"Col": 65,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 49,
		"Col": 66,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 49,
		"Col": 67,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 49,
		"Col": 68,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 49,
		"Col": 69,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_destroy_prepared_key",
		"Row": 50,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 50,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 50,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 50,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 50,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_iv_ino_lblk_",
		"Row": 50,
		"Col": 57,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "32",
		"Row": 50,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_keys",
		"Row": 50,
		"Col": 64,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 50,
		"Col": 65,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i",
		"Row": 50,
		"Col": 66,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 50,
		"Col": 67,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 50,
		"Col": 68,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 50,
		"Col": 69,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 51,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 53,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 53,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 53,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 53,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 53,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 53,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 53,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "kfree_sensitive",
		"Row": 54,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 54,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 54,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 54,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 54,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 55,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 57,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inline",
		"Row": 57,
		"Col": 13,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bool",
		"Row": 57,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "valid_key_spec",
		"Row": 57,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 57,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 57,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 57,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 57,
		"Col": 68,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 57,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spec",
		"Row": 57,
		"Col": 74,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 57,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 58,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 59,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 59,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spec",
		"Row": 59,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 59,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 59,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 59,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 60,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "false",
		"Row": 60,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 60,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 61,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "master_key_spec_len",
		"Row": 61,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 61,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spec",
		"Row": 61,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 61,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 61,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 61,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 61,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 62,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 64,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 64,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_instantiate",
		"Row": 64,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 64,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 64,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 64,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 64,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 64,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 64,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 65,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_preparsed_payload",
		"Row": 65,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 65,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 65,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 65,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 66,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 67,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 67,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 67,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 67,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 67,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 67,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 67,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 67,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 67,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 67,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 67,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 67,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 67,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 67,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 67,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 67,
		"Col": 61,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 67,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 67,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 68,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 68,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 68,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 69,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 71,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 71,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_destroy",
		"Row": 71,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 71,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 71,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 71,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 71,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 71,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 71,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 72,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "free_master_key",
		"Row": 73,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 73,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 73,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 73,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 73,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 73,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 73,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 73,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 73,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 73,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 73,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 73,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 74,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 76,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 76,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_describe",
		"Row": 76,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 76,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 76,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 76,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 76,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 76,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 76,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 76,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 76,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_file",
		"Row": 76,
		"Col": 71,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 76,
		"Col": 73,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 76,
		"Col": 74,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 76,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 77,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_puts",
		"Row": 78,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 78,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 78,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 78,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 78,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 78,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 78,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 78,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 78,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 80,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 80,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_is_positive",
		"Row": 80,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 80,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 80,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 80,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 80,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 80,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 81,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 81,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 81,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 81,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 81,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 81,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 81,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 81,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 81,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 81,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 81,
		"Col": 62,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 81,
		"Col": 63,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 81,
		"Col": 64,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 81,
		"Col": 65,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 81,
		"Col": 66,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 83,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 83,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 83,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "is_master_key_secret_present",
		"Row": 83,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 83,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 83,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 83,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 83,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 83,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 83,
		"Col": 57,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 83,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_puts",
		"Row": 84,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 84,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 84,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 84,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 84,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 84,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 84,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "removed",
		"Row": 84,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 84,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 84,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 84,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 85,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 86,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Type of key in -\u003es_master_keys.  Each key of this type represents a master\r\n * key which has been added to the filesystem.  Its payload is a\r\n * 'struct fscrypt_master_key'.  The \".\" prefix in the key type name prevents\r\n * users from adding keys of this type via the keyrings syscalls rather than via\r\n * the intended method of FS_IOC_ADD_ENCRYPTION_KEY.\r\n ",
		"Row": 94,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 95,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 95,
		"Col": 13,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type",
		"Row": 95,
		"Col": 22,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt",
		"Row": 95,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 95,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 95,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 96,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "name",
		"Row": 96,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 96,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 96,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 96,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_fscrypt",
		"Row": 96,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 96,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 96,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 97,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "instantiate",
		"Row": 97,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 97,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_instantiate",
		"Row": 97,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 97,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 98,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "destroy",
		"Row": 98,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 98,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_destroy",
		"Row": 98,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 98,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 99,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "describe",
		"Row": 99,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 99,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_describe",
		"Row": 99,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 99,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 100,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 100,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 102,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 102,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_user_key_instantiate",
		"Row": 102,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 102,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 102,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 102,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 102,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 102,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 102,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 103,
		"Col": 26,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_preparsed_payload",
		"Row": 103,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 103,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 103,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 103,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 104,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * We just charge FSCRYPT_MAX_KEY_SIZE bytes to the user's key quota for\r\n\t * each key, regardless of the exact key size.  The amount of memory\r\n\t * actually used is greater than the size of the raw key anyway.\r\n\t ",
		"Row": 109,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 110,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_payload_reserve",
		"Row": 110,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 110,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 110,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 110,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 110,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 110,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 110,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 111,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 113,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 113,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_user_key_describe",
		"Row": 113,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 113,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 113,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 113,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 113,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 113,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 113,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 113,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 113,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_file",
		"Row": 113,
		"Col": 76,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 113,
		"Col": 78,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 113,
		"Col": 79,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 113,
		"Col": 80,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 114,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_puts",
		"Row": 115,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 115,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 115,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 115,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 115,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 115,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 115,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 115,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 115,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 116,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Type of key in -\u003emk_users.  Each key of this type represents a particular\r\n * user who has added a particular master key.\r\n *\r\n * Note that the name of this key type really should be something like\r\n * \".fscrypt-user\" instead of simply \".fscrypt\".  But the shorter name is chosen\r\n * mainly for simplicity of presentation in /proc/keys when read by a non-root\r\n * user.  And it is expected to be rare that a key is actually added by multiple\r\n * users, since users should keep their encryption keys confidential.\r\n ",
		"Row": 127,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 128,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 128,
		"Col": 13,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type",
		"Row": 128,
		"Col": 22,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_user",
		"Row": 128,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 128,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 128,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 129,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "name",
		"Row": 129,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 129,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 129,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 129,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt",
		"Row": 129,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 129,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 129,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 130,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "instantiate",
		"Row": 130,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 130,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_user_key_instantiate",
		"Row": 130,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 130,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 131,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "describe",
		"Row": 131,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 131,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_user_key_describe",
		"Row": 131,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 131,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 132,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 132,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": " Search -\u003es_master_keys or -\u003emk_users ",
		"Row": 134,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 135,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 135,
		"Col": 13,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 135,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 135,
		"Col": 19,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "search_fscrypt_keyring",
		"Row": 135,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 135,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 135,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 135,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 135,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 135,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 135,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 136,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type",
		"Row": 136,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 136,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 136,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 136,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 137,
		"Col": 27,
		"BlockNo": 0
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 137,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 137,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 137,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 137,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 138,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * We need to mark the keyring reference as \"possessed\" so that we\r\n\t * acquire permission to search it, via the KEY_POS_SEARCH permission.\r\n\t ",
		"Row": 142,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_ref_t",
		"Row": 143,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 143,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 143,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "make_key_ref",
		"Row": 143,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 143,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 143,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 143,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "true",
		"Row": 143,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " possessed ",
		"Row": 143,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 143,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 143,
		"Col": 2,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 145,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 145,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring_search",
		"Row": 145,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 145,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 145,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 145,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 145,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 145,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 145,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 145,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "false",
		"Row": 145,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 145,
		"Col": 61,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 145,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 146,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 146,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 146,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 146,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 146,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 146,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 146,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 146,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 147,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 147,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 147,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 147,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 147,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 147,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 147,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 147,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EAGAIN",
		"Row": 147,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "||",
		"Literal": "||",
		"Row": 147,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": " not found ",
		"Row": 147,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 148,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 148,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 148,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 148,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 148,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 148,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EKEYREVOKED",
		"Row": 148,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 148,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": " recently invalidated ",
		"Row": 148,
		"Col": 68,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 149,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 149,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ERR_PTR",
		"Row": 149,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 149,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 149,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 149,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 149,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 149,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 150,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ERR_CAST",
		"Row": 150,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 150,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 150,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 150,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 150,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 151,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 152,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_ref_to_ptr",
		"Row": 152,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 152,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyref",
		"Row": 152,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 152,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 152,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 153,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 155,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "define",
		"Row": 155,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_FS_KEYRING_DESCRIPTION_SIZE",
		"Row": 155,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "\\",
		"Row": 155,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 156,
		"Col": 5,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CONST_STRLEN",
		"Row": 156,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 156,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "TEXT",
		"Literal": "fscrypt-",
		"Row": 156,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 156,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 156,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sizeof_field",
		"Row": 156,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 156,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 156,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 156,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 156,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_id",
		"Row": 156,
		"Col": 69,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 156,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 156,
		"Col": 71,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 158,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "define",
		"Row": 158,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_DESCRIPTION_SIZE",
		"Row": 158,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 158,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "2",
		"Row": 158,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 158,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 158,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 158,
		"Col": 72,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 158,
		"Col": 74,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 158,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 160,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "define",
		"Row": 160,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USERS_DESCRIPTION_SIZE",
		"Row": 160,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "\\",
		"Row": 160,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 161,
		"Col": 5,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CONST_STRLEN",
		"Row": 161,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 161,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "TEXT",
		"Literal": "fscrypt-",
		"Row": 161,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 161,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 161,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "2",
		"Row": 161,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 161,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 161,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 161,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "\\",
		"Row": 161,
		"Col": 66,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CONST_STRLEN",
		"Row": 162,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 162,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 162,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 162,
		"Col": 19,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "users",
		"Row": 162,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 162,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 162,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 162,
		"Col": 27,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 162,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 162,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 164,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "define",
		"Row": 164,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USER_DESCRIPTION_SIZE",
		"Row": 164,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "\\",
		"Row": 164,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 165,
		"Col": 5,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "2",
		"Row": 165,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 165,
		"Col": 8,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 165,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 165,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CONST_STRLEN",
		"Row": 165,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 165,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 165,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 165,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uid",
		"Row": 165,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 165,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 165,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 165,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 165,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "10",
		"Row": 165,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 165,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 165,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 165,
		"Col": 66,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 167,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 167,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_fs_keyring_description",
		"Row": 167,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 167,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 168,
		"Col": 16,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 168,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 168,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_FS_KEYRING_DESCRIPTION_SIZE",
		"Row": 168,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 168,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 168,
		"Col": 66,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 169,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 169,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 169,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 169,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 169,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 169,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 170,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sprintf",
		"Row": 171,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 171,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 171,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 171,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "TEXT",
		"Literal": "fscrypt-%s",
		"Row": 171,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 171,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 171,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 171,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_id",
		"Row": 171,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 171,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 171,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 172,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 174,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 174,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_description",
		"Row": 174,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 174,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 175,
		"Col": 16,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 175,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 175,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_DESCRIPTION_SIZE",
		"Row": 175,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 175,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 175,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 176,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 176,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 176,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 176,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 176,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 176,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 177,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sprintf",
		"Row": 178,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 178,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 178,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 178,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 178,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 178,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 178,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "phN",
		"Row": 178,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 178,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 178,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "master_key_spec_len",
		"Row": 179,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 179,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 179,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 179,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 179,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 179,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 179,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "8",
		"Row": 179,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 179,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 179,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 179,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 179,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 179,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 179,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 179,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 179,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 180,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 182,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 182,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_users_keyring_description",
		"Row": 182,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 182,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 183,
		"Col": 16,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 183,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 183,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USERS_DESCRIPTION_SIZE",
		"Row": 183,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 183,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 183,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 184,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 184,
		"Col": 19,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "8",
		"Row": 184,
		"Col": 20,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_identifier",
		"Row": 184,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 184,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 184,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 184,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 184,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 185,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sprintf",
		"Row": 186,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 186,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 186,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 186,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "TEXT",
		"Literal": "fscrypt-%*phN-users",
		"Row": 186,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 186,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 187,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 187,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_identifier",
		"Row": 187,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 187,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 187,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 188,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 190,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 190,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_user_description",
		"Row": 190,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 190,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 191,
		"Col": 16,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 191,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 191,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USER_DESCRIPTION_SIZE",
		"Row": 191,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 191,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 191,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 192,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 192,
		"Col": 19,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "8",
		"Row": 192,
		"Col": 20,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_identifier",
		"Row": 192,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 192,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 192,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 192,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 192,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 193,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sprintf",
		"Row": 195,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 195,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 195,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 195,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 195,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 195,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 195,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "phN",
		"Row": 195,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 195,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uid",
		"Row": 195,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 195,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 195,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 195,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 195,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 195,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 195,
		"Col": 64,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 195,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_identifier",
		"Row": 196,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 196,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__kuid_val",
		"Row": 196,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 196,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_fsuid",
		"Row": 196,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 196,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 196,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 196,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 196,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 196,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 197,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": " Create -\u003es_master_keys if needed.  Synchronized by fscrypt_add_key_mutex. ",
		"Row": 199,
		"Col": 76,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 200,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 200,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "allocate_filesystem_keyring",
		"Row": 200,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 200,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 200,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 200,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 200,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 200,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 200,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 201,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 202,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 202,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 202,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_FS_KEYRING_DESCRIPTION_SIZE",
		"Row": 202,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 202,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 202,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 203,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 203,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 203,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 203,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 203,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 205,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 205,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 205,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 205,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_master_keys",
		"Row": 205,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 205,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 206,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 206,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 206,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_fs_keyring_description",
		"Row": 208,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 208,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 208,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 208,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 208,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 208,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 208,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 209,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 209,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring_alloc",
		"Row": 209,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 209,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 209,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 209,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GLOBAL_ROOT_UID",
		"Row": 209,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 209,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GLOBAL_ROOT_GID",
		"Row": 209,
		"Col": 73,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 209,
		"Col": 74,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_cred",
		"Row": 210,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 210,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 210,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 210,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_POS_SEARCH",
		"Row": 210,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 210,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_SEARCH",
		"Row": 211,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 211,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_READ",
		"Row": 211,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 211,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_VIEW",
		"Row": 211,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 211,
		"Col": 63,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_ALLOC_NOT_IN_QUOTA",
		"Row": 212,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 212,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 212,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 212,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 212,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 212,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 212,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 213,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 213,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 213,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 213,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 213,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 213,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 213,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 214,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 214,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 214,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 214,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 214,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 214,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * Pairs with the smp_load_acquire() in fscrypt_find_master_key().\r\n\t * I.e., here we publish -\u003es_master_keys with a RELEASE barrier so that\r\n\t * concurrent tasks can ACQUIRE it.\r\n\t ",
		"Row": 220,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "smp_store_release",
		"Row": 221,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 221,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 221,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 221,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 221,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_master_keys",
		"Row": 221,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 221,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 221,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 221,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 221,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 222,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 222,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 222,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 223,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 225,
		"Col": 4,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_sb_free",
		"Row": 225,
		"Col": 20,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 225,
		"Col": 21,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 225,
		"Col": 27,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 225,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 225,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 225,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 225,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 226,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 227,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 227,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 227,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 227,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_master_keys",
		"Row": 227,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 227,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 227,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 228,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 228,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_master_keys",
		"Row": 228,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 228,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 228,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 228,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 229,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Find the specified master key in -\u003es_master_keys.\r\n * Returns ERR_PTR(-ENOKEY) if not found.\r\n ",
		"Row": 234,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 235,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 235,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 235,
		"Col": 12,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_find_master_key",
		"Row": 235,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 235,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 235,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 235,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 235,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 235,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 235,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 236,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 236,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 236,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 236,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 236,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 236,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 237,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 238,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 238,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 238,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 238,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 238,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 239,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 239,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 239,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_DESCRIPTION_SIZE",
		"Row": 239,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 239,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 239,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * Pairs with the smp_store_release() in allocate_filesystem_keyring().\r\n\t * I.e., another task can publish -\u003es_master_keys concurrently,\r\n\t * executing a RELEASE barrier.  We need to use smp_load_acquire() here\r\n\t * to safely ACQUIRE the memory the other task published.\r\n\t ",
		"Row": 246,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 247,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 247,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "smp_load_acquire",
		"Row": 247,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 247,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 247,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 247,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 247,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_master_keys",
		"Row": 247,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 247,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 247,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 248,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 248,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 248,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 248,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 248,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 248,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 249,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ERR_PTR",
		"Row": 249,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 249,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 249,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 249,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 249,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 249,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " No keyring yet, so no keys yet. ",
		"Row": 249,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_description",
		"Row": 251,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 251,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 251,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 251,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 251,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 251,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 251,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 252,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "search_fscrypt_keyring",
		"Row": 252,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 252,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 252,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 252,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 252,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt",
		"Row": 252,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 252,
		"Col": 61,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 252,
		"Col": 73,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 252,
		"Col": 74,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 252,
		"Col": 75,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 253,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 255,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 255,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "allocate_master_key_users_keyring",
		"Row": 255,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 255,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 255,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 255,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 255,
		"Col": 72,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 255,
		"Col": 74,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 255,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 256,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 257,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 257,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 257,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USERS_DESCRIPTION_SIZE",
		"Row": 257,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 257,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 257,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 258,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 258,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 258,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 258,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 258,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_users_keyring_description",
		"Row": 260,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 260,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 260,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 260,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 261,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 261,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 261,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 261,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 261,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 261,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 261,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 261,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 261,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 262,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 262,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring_alloc",
		"Row": 262,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 262,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 262,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 262,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GLOBAL_ROOT_UID",
		"Row": 262,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 262,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GLOBAL_ROOT_GID",
		"Row": 262,
		"Col": 73,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 262,
		"Col": 74,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_cred",
		"Row": 263,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 263,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 263,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 263,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_POS_SEARCH",
		"Row": 263,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 263,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_SEARCH",
		"Row": 264,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 264,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_READ",
		"Row": 264,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 264,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_VIEW",
		"Row": 264,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 264,
		"Col": 63,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_ALLOC_NOT_IN_QUOTA",
		"Row": 265,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 265,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 265,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 265,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 265,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 265,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 265,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 266,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 266,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 266,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 266,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 266,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 266,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 266,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 267,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 267,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 267,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 267,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 267,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 267,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 269,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 269,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 269,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 269,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 269,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 269,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 270,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 270,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 270,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 271,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Find the current user's \"key\" in the master key's -\u003emk_users.\r\n * Returns ERR_PTR(-ENOKEY) if not found.\r\n ",
		"Row": 276,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 277,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 277,
		"Col": 13,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 277,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 277,
		"Col": 19,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "find_master_key_user",
		"Row": 277,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 277,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 277,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 277,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 277,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 277,
		"Col": 69,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 277,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 278,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 279,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 279,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 279,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USER_DESCRIPTION_SIZE",
		"Row": 279,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 279,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 279,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_user_description",
		"Row": 281,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 281,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 281,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 281,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 281,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 281,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 281,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 281,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 281,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 281,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 281,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 281,
		"Col": 67,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 281,
		"Col": 68,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 282,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "search_fscrypt_keyring",
		"Row": 282,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 282,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 282,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 282,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 282,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 282,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 282,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_user",
		"Row": 282,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 282,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 283,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 283,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 283,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 284,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Give the current user a \"key\" in -\u003emk_users.  This charges the user's quota\r\n * and marks the master key as added by the current user, so that it cannot be\r\n * removed by another user with the key.  Either the master key's key-\u003esem must\r\n * be held for write, or the master key must be still undergoing initialization.\r\n ",
		"Row": 291,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 292,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 292,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_master_key_user",
		"Row": 292,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 292,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 292,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 292,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 292,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 292,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 292,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 293,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 294,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 294,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 294,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_USER_DESCRIPTION_SIZE",
		"Row": 294,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 294,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 294,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 295,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 295,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 295,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 295,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 295,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 296,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 296,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 296,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_user_description",
		"Row": 298,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 298,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 298,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 298,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 298,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 298,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 298,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 298,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 298,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 298,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 298,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 298,
		"Col": 67,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 298,
		"Col": 68,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 299,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 299,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_alloc",
		"Row": 299,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 299,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 299,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_user",
		"Row": 299,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 299,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 299,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 299,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_fsuid",
		"Row": 300,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 300,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 300,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 300,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_gid",
		"Row": 300,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 300,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 300,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 300,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_cred",
		"Row": 300,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 300,
		"Col": 61,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 300,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 300,
		"Col": 63,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_POS_SEARCH",
		"Row": 301,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 301,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_VIEW",
		"Row": 301,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 301,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 301,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 301,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 301,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 301,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 301,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 302,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 302,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 302,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 302,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 302,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 302,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 302,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 303,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 303,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 303,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 303,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 303,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 303,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 305,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 305,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_instantiate_and_link",
		"Row": 305,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 305,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 305,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 305,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 305,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 305,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 305,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 305,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 305,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 305,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 305,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 305,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 305,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 305,
		"Col": 72,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 305,
		"Col": 73,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 306,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 306,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 306,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 306,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 306,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 307,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 307,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 307,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 308,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Remove the current user's \"key\" from -\u003emk_users.\r\n * The master key's key-\u003esem must be held for write.\r\n *\r\n * Returns 0 if removed, -ENOKEY if not found, or another -errno code.\r\n ",
		"Row": 315,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 316,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 316,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "remove_master_key_user",
		"Row": 316,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 316,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 316,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 316,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 316,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 316,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 316,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 317,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 318,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 318,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 318,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 318,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 318,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 319,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 319,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 319,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 321,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 321,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "find_master_key_user",
		"Row": 321,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 321,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 321,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 321,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 321,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 322,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 322,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 322,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 322,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 322,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 322,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 322,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 323,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 323,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 323,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 323,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 323,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 323,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 324,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 324,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_unlink",
		"Row": 324,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 324,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 324,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 324,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 324,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 324,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 324,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 324,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 324,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 325,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 325,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 325,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 325,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 325,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 326,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 326,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 326,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 327,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Allocate a new fscrypt_master_key which contains the given secret, set it as\r\n * the payload of a new 'struct key' of type fscrypt, and link the 'struct key'\r\n * into the given keyring.  Synchronized by fscrypt_add_key_mutex.\r\n ",
		"Row": 333,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 334,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 334,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_new_master_key",
		"Row": 334,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 334,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 334,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 334,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 334,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 334,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 334,
		"Col": 71,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 335,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 335,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 335,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 335,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 335,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 335,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 336,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 336,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 336,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 336,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 336,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 337,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 338,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 338,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 338,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 338,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 338,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 339,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 339,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 339,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MK_DESCRIPTION_SIZE",
		"Row": 339,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 339,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 339,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 340,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 340,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 340,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 340,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 340,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 341,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 341,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 341,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 343,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 343,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "kzalloc",
		"Row": 343,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 343,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 343,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 343,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 343,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 343,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 343,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 343,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GFP_KERNEL",
		"Row": 343,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 343,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 343,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 344,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 344,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 344,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 344,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 344,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 345,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 345,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOMEM",
		"Row": 345,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 345,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 347,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 347,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 347,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 347,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 347,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 347,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 347,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "move_master_key_secret",
		"Row": 349,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 349,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 349,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 349,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 349,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 349,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 349,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 349,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 349,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 349,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "refcount_set",
		"Row": 351,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 351,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 351,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 351,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 351,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_refcount",
		"Row": 351,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 351,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 351,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 351,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 351,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " secret is present ",
		"Row": 351,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "INIT_LIST_HEAD",
		"Row": 352,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 352,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 352,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 352,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 352,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes",
		"Row": 352,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 352,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 352,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_lock_init",
		"Row": 353,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 353,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 353,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 353,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 353,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 353,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 353,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 353,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 355,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 355,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 355,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 355,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 355,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 355,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER",
		"Row": 355,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 355,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 355,
		"Col": 60,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 356,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 356,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "allocate_master_key_users_keyring",
		"Row": 356,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 356,
		"Col": 48,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 356,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 356,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 356,
		"Col": 52,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 357,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 357,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 357,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 357,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 358,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_free_mk",
		"Row": 358,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 358,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 359,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 359,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_master_key_user",
		"Row": 359,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 359,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 359,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 359,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 359,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 360,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 360,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 360,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 360,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 361,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_free_mk",
		"Row": 361,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 361,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 362,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * Note that we don't charge this key to anyone's quota, since when\r\n\t * -\u003emk_users is in use those keys are charged instead, and otherwise\r\n\t * (when -\u003emk_users isn't in use) only root can add these keys.\r\n\t ",
		"Row": 368,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "format_mk_description",
		"Row": 369,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 369,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 369,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 369,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 369,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 369,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 369,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 370,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 370,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_alloc",
		"Row": 370,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 370,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 370,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt",
		"Row": 370,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 370,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 370,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 370,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GLOBAL_ROOT_UID",
		"Row": 371,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 371,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GLOBAL_ROOT_GID",
		"Row": 371,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 371,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "current_cred",
		"Row": 371,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 371,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 371,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 371,
		"Col": 61,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_POS_SEARCH",
		"Row": 372,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 372,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_SEARCH",
		"Row": 372,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 372,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_USR_VIEW",
		"Row": 372,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 372,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_ALLOC_NOT_IN_QUOTA",
		"Row": 373,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 373,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 373,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 373,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 373,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 374,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 374,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 374,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 374,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 374,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 374,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 374,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 374,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 375,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 375,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 375,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 375,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 375,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 375,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 375,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 376,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_free_mk",
		"Row": 376,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 376,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 377,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 378,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 378,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_instantiate_and_link",
		"Row": 378,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 378,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 378,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 378,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 378,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 378,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 378,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 378,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 378,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 378,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 378,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 378,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring",
		"Row": 378,
		"Col": 64,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 378,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 378,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 378,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 378,
		"Col": 72,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 379,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 379,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 379,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 379,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 379,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 380,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 380,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 380,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 380,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 381,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_free_mk",
		"Row": 381,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 381,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 383,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 383,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 383,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_free_mk",
		"Row": 385,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 385,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "free_master_key",
		"Row": 386,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 386,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 386,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 386,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 386,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 387,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 387,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 387,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 388,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "ILLEGAL",
		"Literal": "#",
		"Row": 390,
		"Col": 0,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "define",
		"Row": 390,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_DEAD",
		"Row": 390,
		"Col": 15,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 390,
		"Col": 20,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 392,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 392,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_existing_master_key",
		"Row": 392,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 392,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 392,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 392,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 392,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 392,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 392,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 393,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 393,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 393,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 393,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 393,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 394,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 395,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 395,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 395,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 395,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 395,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bool",
		"Row": 396,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "rekey",
		"Row": 396,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 396,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 397,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 397,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 397,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * If the current user is already in -\u003emk_users, then there's nothing to\r\n\t * do.  (Not applicable for v1 policy keys, which have NULL -\u003emk_users.)\r\n\t ",
		"Row": 402,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 403,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 403,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 403,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 403,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 403,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 403,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 403,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 404,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 404,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "find_master_key_user",
		"Row": 404,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 404,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 404,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 404,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 404,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 405,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 405,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 405,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 405,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ERR_PTR",
		"Row": 405,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 405,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 405,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 405,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 405,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 405,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 405,
		"Col": 42,
		"BlockNo": 3
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 406,
		"Col": 14,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 406,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 406,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 406,
		"Col": 23,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 406,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 406,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 406,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 407,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 407,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 407,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 407,
		"Col": 38,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 407,
		"Col": 39,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 407,
		"Col": 40,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 408,
		"Col": 19,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 408,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 408,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 408,
		"Col": 28,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 408,
		"Col": 29,
		"BlockNo": 3
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 409,
		"Col": 18,
		"BlockNo": 3
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 409,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 409,
		"Col": 21,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 410,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 411,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " If we'll be re-adding -\u003emk_secret, try to take the reference. ",
		"Row": 413,
		"Col": 68,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "rekey",
		"Row": 414,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 414,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 414,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "is_master_key_secret_present",
		"Row": 414,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 414,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 414,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 414,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 414,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 414,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 414,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 414,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 415,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 415,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "rekey",
		"Row": 415,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 415,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 415,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "refcount_inc_not_zero",
		"Row": 415,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 415,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 415,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 415,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 415,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_refcount",
		"Row": 415,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 415,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 415,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 416,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_DEAD",
		"Row": 416,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 416,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " Add the current user to -\u003emk_users, if applicable. ",
		"Row": 418,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 419,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 419,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 419,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 419,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 419,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 419,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 419,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 420,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 420,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_master_key_user",
		"Row": 420,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 420,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 420,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 420,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 420,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 421,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 421,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 421,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 421,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 421,
		"Col": 18,
		"BlockNo": 3
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 422,
		"Col": 14,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 422,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "rekey",
		"Row": 422,
		"Col": 21,
		"BlockNo": 3
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 422,
		"Col": 24,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "refcount_dec_and_test",
		"Row": 422,
		"Col": 46,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 422,
		"Col": 47,
		"BlockNo": 3
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 422,
		"Col": 48,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 422,
		"Col": 50,
		"BlockNo": 3
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 422,
		"Col": 52,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_refcount",
		"Row": 422,
		"Col": 63,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 422,
		"Col": 64,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 422,
		"Col": 65,
		"BlockNo": 3
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 423,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_DEAD",
		"Row": 423,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 423,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 424,
		"Col": 18,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 424,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 424,
		"Col": 23,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 425,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 426,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " Re-add the secret if needed. ",
		"Row": 428,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 429,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 429,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "rekey",
		"Row": 429,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 429,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "move_master_key_secret",
		"Row": 430,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 430,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 430,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 430,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 430,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 430,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 430,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 430,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 430,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 430,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 431,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 431,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 431,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 432,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 434,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 434,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "do_add_master_key",
		"Row": 434,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 434,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 434,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 434,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 434,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 434,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 434,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 435,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 435,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 435,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 435,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 435,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 436,
		"Col": 22,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 436,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 436,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 436,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 436,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 436,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 437,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 438,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "DEFINE_MUTEX",
		"Row": 438,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 438,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_add_key_mutex",
		"Row": 438,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 438,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 438,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 439,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 439,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 439,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 439,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 439,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 440,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 440,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 440,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mutex_lock",
		"Row": 442,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 442,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 442,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_add_key_mutex",
		"Row": 442,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 442,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 442,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " serialize find + link ",
		"Row": 442,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "retry",
		"Row": 443,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 443,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 444,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 444,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_find_master_key",
		"Row": 444,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 444,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 444,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 444,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 444,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 444,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 444,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 445,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 445,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 445,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 445,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 445,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 445,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 445,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 445,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 446,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 446,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 446,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 446,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 446,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 446,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 446,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 447,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 447,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 447,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 447,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 447,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 447,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 447,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 448,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_unlock",
		"Row": 448,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 448,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": " Didn't find the key in -\u003es_master_keys.  Add it. ",
		"Row": 449,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 450,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 450,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "allocate_filesystem_keyring",
		"Row": 450,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 450,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 450,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 450,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 450,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 451,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 451,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 451,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 451,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 452,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_unlock",
		"Row": 452,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 452,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 453,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 453,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_new_master_key",
		"Row": 453,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 453,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 453,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 453,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 453,
		"Col": 48,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 453,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 453,
		"Col": 52,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 453,
		"Col": 54,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_master_keys",
		"Row": 453,
		"Col": 67,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 453,
		"Col": 68,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 453,
		"Col": 69,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 454,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "ELSE",
		"Literal": "else",
		"Row": 454,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 454,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t\t * Found the key in -\u003es_master_keys.  Re-add the secret if\r\n\t\t * needed, and add the user to -\u003emk_users if needed.\r\n\t\t ",
		"Row": 458,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "down_write",
		"Row": 459,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 459,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 459,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 459,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 459,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 459,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 459,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 459,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 460,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 460,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_existing_master_key",
		"Row": 460,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 460,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 460,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 460,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 460,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 460,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 460,
		"Col": 54,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 460,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 460,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 460,
		"Col": 57,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 460,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 460,
		"Col": 65,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 460,
		"Col": 66,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 460,
		"Col": 67,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "up_write",
		"Row": 461,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 461,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 461,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 461,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 461,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 461,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 461,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 461,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 462,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 462,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 462,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 462,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_DEAD",
		"Row": 462,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 462,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 462,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": "COMMENT",
		"Literal": " Key being removed or needs to be removed ",
		"Row": 463,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_invalidate",
		"Row": 464,
		"Col": 26,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 464,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 464,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 464,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 464,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 465,
		"Col": 19,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 465,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 465,
		"Col": 23,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 465,
		"Col": 24,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 465,
		"Col": 25,
		"BlockNo": 3
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 466,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "retry",
		"Row": 466,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 466,
		"Col": 23,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 467,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 468,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 468,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 468,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 468,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 468,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 469,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_unlock",
		"Row": 470,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 470,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mutex_unlock",
		"Row": 471,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 471,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 471,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_add_key_mutex",
		"Row": 471,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 471,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 471,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 472,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 472,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 472,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 473,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 475,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 475,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_master_key",
		"Row": 475,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 475,
		"Col": 26,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 475,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 475,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 475,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 475,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 475,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 476,
		"Col": 20,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 476,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 476,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 476,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 476,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 477,
		"Col": 20,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 477,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 477,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 477,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 477,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 478,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 479,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 479,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 479,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 481,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 481,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 481,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 481,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 481,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 481,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER",
		"Row": 481,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 481,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 481,
		"Col": 61,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 482,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 482,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_init_hkdf",
		"Row": 482,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 482,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 482,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 482,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 482,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "hkdf",
		"Row": 482,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 482,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 482,
		"Col": 53,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 482,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 482,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 482,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 483,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 483,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 483,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 483,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 483,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 484,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 484,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 484,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 484,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 485,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 485,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 485,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t\t * Now that the HKDF context is initialized, the raw key is no\r\n\t\t * longer needed.\r\n\t\t ",
		"Row": 490,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memzero_explicit",
		"Row": 491,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 491,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 491,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 491,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 491,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 491,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 491,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 491,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 491,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 491,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 491,
		"Col": 52,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": " Calculate the key identifier ",
		"Row": 493,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 494,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 494,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_hkdf_expand",
		"Row": 494,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 494,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 494,
		"Col": 35,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 494,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 494,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "hkdf",
		"Row": 494,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 494,
		"Col": 48,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "HKDF_CONTEXT_KEY_IDENTIFIER",
		"Row": 495,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 495,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 495,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 495,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 495,
		"Col": 58,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 495,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 496,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 496,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 496,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 496,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 496,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 496,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 497,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 497,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 497,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 498,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 498,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 498,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 498,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 499,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 499,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 499,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 500,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 501,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "do_add_master_key",
		"Row": 501,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 501,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 501,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 501,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 501,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 501,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 501,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 501,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 501,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 502,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 504,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 504,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_preparse",
		"Row": 504,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 504,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 504,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_preparsed_payload",
		"Row": 504,
		"Col": 73,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 504,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 504,
		"Col": 79,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 504,
		"Col": 80,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 505,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 506,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 506,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_payload",
		"Row": 506,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 506,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 506,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 506,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 506,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 506,
		"Col": 67,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 506,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 506,
		"Col": 72,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 508,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 508,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 508,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 508,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "datalen",
		"Row": 508,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "\u003c",
		"Literal": "\u003c",
		"Row": 508,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 508,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 508,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 508,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 508,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 508,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 508,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MIN_KEY_SIZE",
		"Row": 508,
		"Col": 63,
		"BlockNo": 1
	},
	{
		"Type": "||",
		"Literal": "||",
		"Row": 508,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 509,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 509,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "datalen",
		"Row": 509,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "\u003e",
		"Literal": "\u003e",
		"Row": 509,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 509,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 509,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 509,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 509,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 509,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "+",
		"Literal": "+",
		"Row": 509,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 509,
		"Col": 63,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 509,
		"Col": 64,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 510,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 510,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 510,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 510,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 512,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 512,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 512,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 512,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 512,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 512,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR",
		"Row": 512,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 512,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 513,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 513,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 513,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 513,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER",
		"Row": 513,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 513,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 514,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 514,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 514,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 514,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 516,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 516,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 516,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 516,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 516,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 516,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 517,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 517,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 517,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 517,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 519,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 519,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 519,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 519,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 519,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 519,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 519,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 519,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 519,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "kmemdup",
		"Row": 519,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 519,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 519,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 519,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 519,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 519,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "datalen",
		"Row": 519,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 519,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "GFP_KERNEL",
		"Row": 519,
		"Col": 69,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 519,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 519,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 520,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 520,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 520,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 520,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 520,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 520,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 520,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 520,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 520,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 520,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 520,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 520,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 521,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 521,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOMEM",
		"Row": 521,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 521,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 523,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 523,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "quotalen",
		"Row": 523,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 523,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 523,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 523,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "datalen",
		"Row": 523,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 523,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 524,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 524,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 524,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 525,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 527,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 527,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_free_preparse",
		"Row": 527,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 527,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 528,
		"Col": 26,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_preparsed_payload",
		"Row": 528,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 528,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 528,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 528,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 529,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "kfree_sensitive",
		"Row": 530,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 530,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "prep",
		"Row": 530,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 530,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 530,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 530,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 530,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 530,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 530,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 530,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 530,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 530,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 531,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 533,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 533,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_describe",
		"Row": 533,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 533,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 533,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 533,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 533,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 533,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 533,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 533,
		"Col": 68,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 534,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_file",
		"Row": 534,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 534,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 534,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 534,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 535,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_puts",
		"Row": 536,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 536,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 536,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 536,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 536,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 536,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "description",
		"Row": 536,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 536,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 536,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 537,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 537,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_is_positive",
		"Row": 537,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 537,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 537,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 537,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 537,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 537,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 538,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 538,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_payload",
		"Row": 538,
		"Col": 53,
		"BlockNo": 2
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 538,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 538,
		"Col": 62,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 538,
		"Col": 64,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 539,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 539,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 539,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 539,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 539,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 539,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 539,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 539,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 539,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "seq_printf",
		"Row": 541,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 541,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "m",
		"Row": 541,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 541,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 541,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 541,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 541,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 541,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 541,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 541,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 541,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 541,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 541,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 541,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 541,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 541,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "datalen",
		"Row": 541,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 541,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 541,
		"Col": 54,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 541,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 541,
		"Col": 60,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 541,
		"Col": 61,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 541,
		"Col": 62,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 542,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 543,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 545,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 545,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_destroy",
		"Row": 545,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 545,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 545,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 545,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 545,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 545,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 545,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 546,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "kfree_sensitive",
		"Row": 547,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 547,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 547,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 547,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 547,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 547,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 547,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 547,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 547,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 547,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 547,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 547,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 548,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 550,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 550,
		"Col": 13,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type",
		"Row": 550,
		"Col": 22,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_provisioning",
		"Row": 550,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 550,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 550,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 551,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "name",
		"Row": 551,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 551,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "TEXT",
		"Literal": "fscrypt-provisioning",
		"Row": 551,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 551,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 552,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "preparse",
		"Row": 552,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 552,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_preparse",
		"Row": 552,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 552,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 553,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "free_preparse",
		"Row": 553,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 553,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_free_preparse",
		"Row": 553,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 553,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 554,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "instantiate",
		"Row": 554,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 554,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "generic_key_instantiate",
		"Row": 554,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 554,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 555,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "describe",
		"Row": 555,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 555,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_describe",
		"Row": 555,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 555,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 556,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "destroy",
		"Row": 556,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 556,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_destroy",
		"Row": 556,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 556,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 557,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 557,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Retrieve the raw key from the Linux keyring key specified by 'key_id', and\r\n * store it into 'secret'.\r\n *\r\n * The key must be of type \"fscrypt-provisioning\" and must have the field\r\n * fscrypt_provisioning_key_payload::type set to 'type', indicating that it's\r\n * only usable with fscrypt with the particular KDF version identified by\r\n * 'type'.  We don't use the \"logon\" key type because there's no way to\r\n * completely restrict the use of such keys; they can be used by any kernel API\r\n * that accepts \"logon\" keys and doesn't require a specific service prefix.\r\n *\r\n * The ability to specify the key via Linux keyring key is intended for cases\r\n * where userspace needs to re-add keys after the filesystem is unmounted and\r\n * re-mounted.  Most users should just provide the raw key directly instead.\r\n ",
		"Row": 573,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 574,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 574,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "get_keyring_key",
		"Row": 574,
		"Col": 26,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 574,
		"Col": 27,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 574,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "32",
		"Row": 574,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_id",
		"Row": 574,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 574,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 574,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "32",
		"Row": 574,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 574,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 574,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 575,
		"Col": 21,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 575,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 575,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 575,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 575,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 576,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_ref_t",
		"Row": 577,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ref",
		"Row": 577,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 577,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 578,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 578,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 578,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 578,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 578,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 579,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 579,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_provisioning_key_payload",
		"Row": 579,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 579,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 579,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 579,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 580,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 580,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 580,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ref",
		"Row": 582,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 582,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "lookup_user_key",
		"Row": 582,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 582,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_id",
		"Row": 582,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 582,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 582,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 582,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "KEY_NEED_SEARCH",
		"Row": 582,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 582,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 582,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 583,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 583,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 583,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 583,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ref",
		"Row": 583,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 583,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 583,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 584,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 584,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 584,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ref",
		"Row": 584,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 584,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 584,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 585,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 585,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_ref_to_ptr",
		"Row": 585,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 585,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ref",
		"Row": 585,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 585,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 585,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 587,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 587,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 587,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 587,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 587,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 587,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 587,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_provisioning",
		"Row": 587,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 587,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 588,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bad_key",
		"Row": 588,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 588,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 589,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 589,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 589,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 589,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 589,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 589,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 589,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 589,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 589,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 589,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 589,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " Don't allow fscrypt v1 keys to be used as v2 keys and vice versa. ",
		"Row": 591,
		"Col": 72,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 592,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 592,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 592,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 592,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 592,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 592,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 592,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 592,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 593,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bad_key",
		"Row": 593,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 593,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 595,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 595,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 595,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 595,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 595,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 595,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "datalen",
		"Row": 595,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 595,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 595,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 595,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 595,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 595,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 595,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 595,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memcpy",
		"Row": 596,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 596,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 596,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 596,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 596,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 596,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 596,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 596,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 596,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 596,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 596,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 596,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 596,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 596,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 596,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 597,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 597,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 597,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 597,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 598,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_put",
		"Row": 598,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 598,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bad_key",
		"Row": 600,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 600,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 601,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 601,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 601,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EKEYREJECTED",
		"Row": 601,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 601,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_put",
		"Row": 602,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 602,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_ref_put",
		"Row": 603,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 603,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ref",
		"Row": 603,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 603,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 603,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 604,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 604,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 604,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 605,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Add a master encryption key to the filesystem, causing all files which were\r\n * encrypted with it to appear \"unlocked\" (decrypted) when accessed.\r\n *\r\n * When adding a key for use by v1 encryption policies, this ioctl is\r\n * privileged, and userspace must provide the 'key_descriptor'.\r\n *\r\n * When adding a key for use by v2+ encryption policies, this ioctl is\r\n * unprivileged.  This is needed, in general, to allow non-root users to use\r\n * encryption without encountering the visibility problems of process-subscribed\r\n * keyrings and the inability to properly remove keys.  This works by having\r\n * each key identified by its cryptographically secure hash --- the\r\n * 'key_identifier'.  The cryptographic hash ensures that a malicious user\r\n * cannot add the wrong key for a given identifier.  Furthermore, each added key\r\n * is charged to the appropriate user's quota for the keyrings service, which\r\n * prevents a malicious user from adding too many keys.  Finally, we forbid a\r\n * user from removing a key while other users have added it too, which prevents\r\n * a user who knows another user's key from causing a denial-of-service by\r\n * removing it at an inopportune time.  (We tolerate that a user who knows a key\r\n * can prevent other users from removing it.)\r\n *\r\n * For more details, see the \"FS_IOC_ADD_ENCRYPTION_KEY\" section of\r\n * Documentation/filesystems/fscrypt.rst.\r\n ",
		"Row": 630,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 631,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_add_key",
		"Row": 631,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 631,
		"Col": 26,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 631,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file",
		"Row": 631,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 631,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 631,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 631,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 631,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 631,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 631,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_uarg",
		"Row": 631,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 631,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 632,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 633,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 633,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 633,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 633,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 633,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file_inode",
		"Row": 633,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 633,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 633,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 633,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 633,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_sb",
		"Row": 633,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 633,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 634,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_add_key_arg",
		"Row": 634,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 634,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 634,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 634,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 634,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_uarg",
		"Row": 634,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 634,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 635,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_add_key_arg",
		"Row": 635,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 635,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 635,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 636,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 636,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 636,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 636,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 637,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 637,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 637,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 639,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 639,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "copy_from_user",
		"Row": 639,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 639,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 639,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 639,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 639,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 639,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 639,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 639,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 639,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 639,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 639,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 639,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 639,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 640,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 640,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EFAULT",
		"Row": 640,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 640,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 642,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 642,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 642,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "valid_key_spec",
		"Row": 642,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 642,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 642,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 642,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 642,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 642,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 642,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 642,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 643,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 643,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 643,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 643,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 645,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 645,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memchr_inv",
		"Row": 645,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 645,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 645,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 645,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 645,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 645,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 645,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 645,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 645,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 645,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 645,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 645,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 645,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 645,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 645,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 645,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 646,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 646,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 646,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 646,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * Only root can add keys that are identified by an arbitrary descriptor\r\n\t * rather than by a cryptographic hash --- since otherwise a malicious\r\n\t * user could add the wrong key.\r\n\t ",
		"Row": 652,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 653,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 653,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 653,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 653,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 653,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 653,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 653,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 653,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR",
		"Row": 653,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 653,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 654,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "capable",
		"Row": 654,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 654,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CAP_SYS_ADMIN",
		"Row": 654,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 654,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 654,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 655,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 655,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EACCES",
		"Row": 655,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 655,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memset",
		"Row": 657,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 657,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 657,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 657,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 657,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 657,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 657,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 657,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 657,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 657,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 657,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 657,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 657,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 658,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 658,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 658,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 658,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_id",
		"Row": 658,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 658,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 658,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 659,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 659,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 659,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 659,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw_size",
		"Row": 659,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 659,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 659,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 659,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 660,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 660,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 660,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 660,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 661,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 661,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "get_keyring_key",
		"Row": 661,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 661,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 661,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 661,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_id",
		"Row": 661,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 661,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 661,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 661,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 661,
		"Col": 52,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 661,
		"Col": 52,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 661,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 661,
		"Col": 57,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 661,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 661,
		"Col": 65,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 661,
		"Col": 66,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 661,
		"Col": 67,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 662,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 662,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 662,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 662,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 663,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_wipe_secret",
		"Row": 663,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 663,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 664,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "ELSE",
		"Literal": "else",
		"Row": 664,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 664,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 665,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 665,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 665,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 665,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw_size",
		"Row": 665,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "\u003c",
		"Literal": "\u003c",
		"Row": 665,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MIN_KEY_SIZE",
		"Row": 665,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "||",
		"Literal": "||",
		"Row": 665,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 666,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 666,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw_size",
		"Row": 666,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "\u003e",
		"Literal": "\u003e",
		"Row": 666,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 666,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 666,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 667,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 667,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 667,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 667,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 668,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 668,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 668,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 668,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 668,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 668,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw_size",
		"Row": 668,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 668,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 669,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 669,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 669,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EFAULT",
		"Row": 669,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 669,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 670,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 670,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "copy_from_user",
		"Row": 670,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 670,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 670,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 670,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 670,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 670,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 670,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 670,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 670,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 670,
		"Col": 48,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 670,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 670,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 670,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 670,
		"Col": 60,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 670,
		"Col": 61,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 671,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_wipe_secret",
		"Row": 671,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 671,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 672,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 674,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 674,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_master_key",
		"Row": 674,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 674,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 674,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 674,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 674,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 674,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 674,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 674,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 674,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 674,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 674,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 674,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 674,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 675,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 675,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 675,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 675,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 676,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_wipe_secret",
		"Row": 676,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 676,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " Return the key identifier to userspace, if applicable ",
		"Row": 678,
		"Col": 60,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 679,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 679,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 679,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EFAULT",
		"Row": 679,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 679,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 680,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 680,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 680,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 680,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 680,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 680,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 680,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 680,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER",
		"Row": 680,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 680,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "copy_to_user",
		"Row": 681,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 681,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 681,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 681,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 681,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 681,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 681,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 681,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 681,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 681,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 681,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 681,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 681,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 681,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 681,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 681,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 681,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 681,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 682,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 682,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 682,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 683,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_wipe_secret",
		"Row": 683,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 683,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 684,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 684,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 684,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 684,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_wipe_secret",
		"Row": 685,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 685,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "wipe_master_key_secret",
		"Row": 686,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 686,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 686,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 686,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 686,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 686,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 687,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 687,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 687,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 688,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EXPORT_SYMBOL_GPL",
		"Row": 689,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 689,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_add_key",
		"Row": 689,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 689,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 689,
		"Col": 41,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Add the key for '-o test_dummy_encryption' to the filesystem keyring.\r\n *\r\n * Use a per-boot random key to prevent people from misusing this option.\r\n ",
		"Row": 695,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 696,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_add_test_dummy_key",
		"Row": 696,
		"Col": 30,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 696,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 696,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 696,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 696,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 696,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 696,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 697,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 697,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 697,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 697,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 697,
		"Col": 58,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 698,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 699,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 699,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "8",
		"Row": 699,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "test_key",
		"Row": 699,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 699,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 699,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 699,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 699,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 700,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key_secret",
		"Row": 700,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 700,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 700,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 701,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 701,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 701,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "get_random_once",
		"Row": 703,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 703,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "test_key",
		"Row": 703,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 703,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 703,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 703,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 703,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memset",
		"Row": 705,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 705,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 705,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 705,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 705,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 705,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 705,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 705,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 705,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 705,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 705,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 705,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 705,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 706,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 706,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size",
		"Row": 706,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 706,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 706,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 706,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memcpy",
		"Row": 707,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 707,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 707,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 707,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "raw",
		"Row": 707,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 707,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "test_key",
		"Row": 707,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 707,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_MAX_KEY_SIZE",
		"Row": 707,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 707,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 707,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 709,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 709,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "add_master_key",
		"Row": 709,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 709,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 709,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 709,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 709,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 709,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 709,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 709,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 709,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 709,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "wipe_master_key_secret",
		"Row": 710,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 710,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 710,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "secret",
		"Row": 710,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 710,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 710,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 711,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 711,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 711,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 712,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Verify that the current user has added a master key with the given identifier\r\n * (returns -ENOKEY if not).  This is needed to prevent a user from encrypting\r\n * their files using some other user's key which they don't actually know.\r\n * Cryptographically this isn't much of a problem, but the semantics of this\r\n * would be a bit weird, so it's best to just forbid it.\r\n *\r\n * The system administrator (CAP_FOWNER) can override this, which should be\r\n * enough for any use cases where encryption policies are being set using keys\r\n * that were chosen ahead of time but aren't available at the moment.\r\n *\r\n * Note that the key may have already removed by the time this returns, but\r\n * that's okay; we just care whether the key was there at some point.\r\n *\r\n * Return: 0 if the key is added, -ENOKEY if it isn't, or another -errno code\r\n ",
		"Row": 729,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 730,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_verify_key_added",
		"Row": 730,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 730,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 730,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 730,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 730,
		"Col": 49,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 730,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 730,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "CONST",
		"Literal": "const",
		"Row": 731,
		"Col": 22,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 731,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "INTEGER",
		"Literal": "8",
		"Row": 731,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 731,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 731,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 731,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 731,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 731,
		"Col": 66,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 732,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 733,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_key_specifier",
		"Row": 733,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 733,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 733,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 734,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 734,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 734,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 734,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 734,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 734,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 734,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 734,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 735,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 735,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 735,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 735,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 735,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 736,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 736,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 736,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 738,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 738,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 738,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 738,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER",
		"Row": 738,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 738,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memcpy",
		"Row": 739,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 739,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 739,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 739,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 739,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 739,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 739,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 739,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "identifier",
		"Row": 739,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 739,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_IDENTIFIER_SIZE",
		"Row": 739,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 739,
		"Col": 71,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 739,
		"Col": 72,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 741,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 741,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_find_master_key",
		"Row": 741,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 741,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 741,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 741,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 741,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 741,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 741,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 741,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 742,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 742,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 742,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 742,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 742,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 742,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 742,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 742,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 743,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 743,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 743,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 743,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 743,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 743,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 743,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 744,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out",
		"Row": 744,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 744,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 745,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 746,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 746,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 746,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 746,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 746,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 746,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 746,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 746,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 746,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 746,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 746,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 747,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 747,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "find_master_key_user",
		"Row": 747,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 747,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 747,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 747,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 747,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 748,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 748,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 748,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 748,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 748,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 748,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 748,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 748,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 749,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 749,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 749,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 749,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 749,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 749,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 749,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 750,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "ELSE",
		"Literal": "else",
		"Row": 750,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 750,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 751,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 751,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 751,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 751,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 751,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 752,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 752,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 752,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 752,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 753,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 754,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 754,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 754,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 754,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 754,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out",
		"Row": 755,
		"Col": 3,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 755,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 756,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 756,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 756,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 756,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 756,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 756,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 756,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "capable",
		"Row": 756,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 756,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CAP_FOWNER",
		"Row": 756,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 756,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 756,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 757,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 757,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 757,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 757,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 758,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 758,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 758,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 759,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Try to evict the inode's dentries from the dentry cache.  If the inode is a\r\n * directory, then it can have at most one dentry; however, that dentry may be\r\n * pinned by child dentries, so first try to evict the children too.\r\n ",
		"Row": 765,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 766,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 766,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "shrink_dcache_inode",
		"Row": 766,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 766,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 766,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 766,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 766,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 766,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 766,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 767,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 768,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dentry",
		"Row": 768,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 768,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dentry",
		"Row": 768,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 768,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 770,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 770,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "S_ISDIR",
		"Row": 770,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 770,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 770,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 770,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_mode",
		"Row": 770,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 770,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 770,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 770,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dentry",
		"Row": 771,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 771,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "d_find_any_alias",
		"Row": 771,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 771,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 771,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 771,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 771,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 772,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 772,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dentry",
		"Row": 772,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 772,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 772,
		"Col": 21,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "shrink_dcache_parent",
		"Row": 773,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 773,
		"Col": 33,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dentry",
		"Row": 773,
		"Col": 39,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 773,
		"Col": 40,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 773,
		"Col": 41,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dput",
		"Row": 774,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 774,
		"Col": 17,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dentry",
		"Row": 774,
		"Col": 23,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 774,
		"Col": 24,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 774,
		"Col": 25,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 775,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 776,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "d_prune_aliases",
		"Row": 777,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 777,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 777,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 777,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 777,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 778,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 780,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 780,
		"Col": 11,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "evict_dentries_for_decrypted_inodes",
		"Row": 780,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 780,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 780,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 780,
		"Col": 73,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 780,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 780,
		"Col": 77,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 780,
		"Col": 78,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 781,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 782,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_info",
		"Row": 782,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 782,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci",
		"Row": 782,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 782,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 783,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 783,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 783,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 783,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 783,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 784,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 784,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 784,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "toput_inode",
		"Row": 784,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 784,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 784,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 784,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_lock",
		"Row": 786,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 786,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 786,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 786,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 786,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 786,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 786,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 786,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "list_for_each_entry",
		"Row": 788,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 788,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci",
		"Row": 788,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 788,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 788,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 788,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 788,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes",
		"Row": 788,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 788,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci_master_key_link",
		"Row": 788,
		"Col": 72,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 788,
		"Col": 73,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 788,
		"Col": 75,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 789,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 789,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci",
		"Row": 789,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 789,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci_inode",
		"Row": 789,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 789,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_lock",
		"Row": 790,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 790,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 790,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 790,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 790,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_lock",
		"Row": 790,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 790,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 790,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 791,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 791,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 791,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 791,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_state",
		"Row": 791,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 791,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 791,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "I_FREEING",
		"Row": 791,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 791,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "I_WILL_FREE",
		"Row": 791,
		"Col": 53,
		"BlockNo": 2
	},
	{
		"Type": "|",
		"Literal": "|",
		"Row": 791,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "I_NEW",
		"Row": 791,
		"Col": 61,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 791,
		"Col": 62,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 791,
		"Col": 63,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 791,
		"Col": 65,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_unlock",
		"Row": 792,
		"Col": 23,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 792,
		"Col": 24,
		"BlockNo": 3
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 792,
		"Col": 25,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 792,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 792,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_lock",
		"Row": 792,
		"Col": 38,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 792,
		"Col": 39,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 792,
		"Col": 40,
		"BlockNo": 3
	},
	{
		"Type": "CONTINUE",
		"Literal": "continue",
		"Row": 793,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 793,
		"Col": 21,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 794,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__iget",
		"Row": 795,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 795,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 795,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 795,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 795,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_unlock",
		"Row": 796,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 796,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 796,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 796,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 796,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_lock",
		"Row": 796,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 796,
		"Col": 35,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 796,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_unlock",
		"Row": 797,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 797,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 797,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 797,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 797,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 797,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 797,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 797,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "shrink_dcache_inode",
		"Row": 799,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 799,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 799,
		"Col": 33,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 799,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 799,
		"Col": 35,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "iput",
		"Row": 800,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 800,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "toput_inode",
		"Row": 800,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 800,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 800,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "toput_inode",
		"Row": 801,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 801,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 801,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 801,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_lock",
		"Row": 803,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 803,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 803,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 803,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 803,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 803,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 803,
		"Col": 48,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 803,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 804,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_unlock",
		"Row": 806,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 806,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 806,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 806,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 806,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 806,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 806,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 806,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "iput",
		"Row": 807,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 807,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "toput_inode",
		"Row": 807,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 807,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 807,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 808,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 810,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 810,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "check_for_busy_inodes",
		"Row": 810,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 810,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 810,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 810,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 810,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 810,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 810,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 811,
		"Col": 23,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 811,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 811,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 811,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 811,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 812,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 813,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "list_head",
		"Row": 813,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 813,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "pos",
		"Row": 813,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 813,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "size_t",
		"Row": 814,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "busy_count",
		"Row": 814,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 814,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 814,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 814,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "UNSIGNED",
		"Literal": "unsigned",
		"Row": 815,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "LONG",
		"Literal": "long",
		"Row": 815,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino",
		"Row": 815,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 815,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "CHAR",
		"Literal": "char",
		"Row": 816,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino_str",
		"Row": 816,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 816,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "50",
		"Row": 816,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 816,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 816,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 816,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 816,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 816,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_lock",
		"Row": 818,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 818,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 818,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 818,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 818,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 818,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 818,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 818,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "list_for_each",
		"Row": 820,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 820,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "pos",
		"Row": 820,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 820,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 820,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 820,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 820,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes",
		"Row": 820,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 820,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "busy_count",
		"Row": 821,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "++",
		"Literal": "++",
		"Row": 821,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 821,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 823,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 823,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "busy_count",
		"Row": 823,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 823,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 823,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 823,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 823,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_unlock",
		"Row": 824,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 824,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 824,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 824,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 824,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 824,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 824,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 824,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 825,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 825,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 825,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 826,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 828,
		"Col": 5,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": " select an example file to show for debugging purposes ",
		"Row": 829,
		"Col": 64,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 830,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 830,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 830,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 830,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 830,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "list_first_entry",
		"Row": 831,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 831,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 831,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 831,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 831,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes",
		"Row": 831,
		"Col": 53,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 831,
		"Col": 54,
		"BlockNo": 2
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 832,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_info",
		"Row": 832,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 832,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci_master_key_link",
		"Row": 833,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 833,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 833,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ci_inode",
		"Row": 833,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 833,
		"Col": 51,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino",
		"Row": 834,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 834,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 834,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 834,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_ino",
		"Row": 834,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 834,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 835,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "spin_unlock",
		"Row": 836,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 836,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 836,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 836,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 836,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_decrypted_inodes_lock",
		"Row": 836,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 836,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 836,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " If the inode is currently being created, ino may still be 0. ",
		"Row": 838,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 839,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 839,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino",
		"Row": 839,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 839,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "snprintf",
		"Row": 840,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 840,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino_str",
		"Row": 840,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 840,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 840,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 840,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino_str",
		"Row": 840,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 840,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 840,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 840,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 840,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "including",
		"Row": 840,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino",
		"Row": 840,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 840,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "lu",
		"Row": 840,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 840,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 840,
		"Col": 63,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino",
		"Row": 840,
		"Col": 67,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 840,
		"Col": 68,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 840,
		"Col": 69,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_warn",
		"Row": 842,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 842,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "NULL",
		"Row": 842,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 842,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 843,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 843,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s",
		"Row": 843,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 843,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 843,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "zu",
		"Row": 843,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "inode",
		"Row": 843,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 843,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s",
		"Row": 843,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 843,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "still",
		"Row": 843,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "busy",
		"Row": 843,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "after",
		"Row": 843,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "removing",
		"Row": 843,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 843,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "with",
		"Row": 843,
		"Col": 64,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 843,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s",
		"Row": 843,
		"Col": 67,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 843,
		"Col": 69,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 843,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "phN",
		"Row": 843,
		"Col": 73,
		"BlockNo": 1
	},
	{
		"Type": "%",
		"Literal": "%",
		"Row": 843,
		"Col": 74,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s",
		"Row": 843,
		"Col": 75,
		"BlockNo": 1
	},
	{
		"Type": "",
		"Literal": "",
		"Row": 843,
		"Col": 75,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 843,
		"Col": 76,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 844,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 844,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_id",
		"Row": 844,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 844,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "busy_count",
		"Row": 844,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 844,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "master_key_spec_type",
		"Row": 844,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 844,
		"Col": 56,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 844,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 844,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 844,
		"Col": 61,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 844,
		"Col": 68,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 844,
		"Col": 69,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 844,
		"Col": 70,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "master_key_spec_len",
		"Row": 845,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 845,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 845,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 845,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 845,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 845,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 845,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 845,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 845,
		"Col": 49,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 845,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "8",
		"Row": 845,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 845,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 845,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 845,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 845,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 845,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_spec",
		"Row": 845,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 845,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 845,
		"Col": 67,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 845,
		"Col": 68,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ino_str",
		"Row": 846,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 846,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 846,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 847,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 847,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EBUSY",
		"Row": 847,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 847,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 848,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 850,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 850,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "try_to_lock_encrypted_files",
		"Row": 850,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 850,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 850,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 850,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 850,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 850,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 850,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 851,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 851,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 851,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 851,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 851,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 852,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 853,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 853,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 853,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 853,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 854,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 854,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "2",
		"Row": 854,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 854,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * An inode can't be evicted while it is dirty or has dirty pages.\r\n\t * Thus, we first have to clean the inodes in -\u003emk_decrypted_inodes.\r\n\t *\r\n\t * Just do it the easy way: call sync_filesystem().  It's overkill, but\r\n\t * it works, and it's more important to minimize the amount of caches we\r\n\t * drop than the amount of data we sync.  Also, unprivileged users can\r\n\t * already call sync_filesystem() via sys_syncfs() or sys_sync().\r\n\t ",
		"Row": 864,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "down_read",
		"Row": 865,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 865,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 865,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 865,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 865,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_umount",
		"Row": 865,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 865,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 865,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 866,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 866,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 866,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sync_filesystem",
		"Row": 866,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 866,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 866,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 866,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 866,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "up_read",
		"Row": 867,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 867,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 867,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 867,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 867,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "s_umount",
		"Row": 867,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 867,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 867,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " If a sync error occurs, still try to evict as much as possible. ",
		"Row": 868,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * Inodes are pinned by their dentries, so we have to evict their\r\n\t * dentries.  shrink_dcache_sb() would suffice, but would be overkill\r\n\t * and inappropriate for use by unprivileged users.  So instead go\r\n\t * through the inodes' alias lists and try to evict each dentry.\r\n\t ",
		"Row": 875,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "evict_dentries_for_decrypted_inodes",
		"Row": 876,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 876,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 876,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 876,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 876,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * evict_dentries_for_decrypted_inodes() already iput() each inode in\r\n\t * the list; any inodes for which that dropped the last reference will\r\n\t * have been evicted due to fscrypt_drop_inode() detecting the key\r\n\t * removal and telling the VFS to evict the inode.  So to finish, we\r\n\t * just need to check whether any inodes couldn't be evicted.\r\n\t ",
		"Row": 884,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 885,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "2",
		"Row": 885,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 885,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "check_for_busy_inodes",
		"Row": 885,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 885,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 885,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 885,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 885,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 885,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 885,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 887,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 887,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "1",
		"Row": 887,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "?",
		"Literal": "?",
		"Row": 887,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 887,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 887,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "2",
		"Row": 887,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 887,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 888,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Try to remove an fscrypt master encryption key.\r\n *\r\n * FS_IOC_REMOVE_ENCRYPTION_KEY (all_users=false) removes the current user's\r\n * claim to the key, then removes the key itself if no other users have claims.\r\n * FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS (all_users=true) always removes the\r\n * key itself.\r\n *\r\n * To \"remove the key itself\", first we wipe the actual master key secret, so\r\n * that no more inodes can be unlocked with it.  Then we try to evict all cached\r\n * inodes that had been unlocked with the key.\r\n *\r\n * If all inodes were evicted, then we unlink the fscrypt_master_key from the\r\n * keyring.  Otherwise it remains in the keyring in the \"incompletely removed\"\r\n * state (without the actual secret key) where it tracks the list of remaining\r\n * inodes.  Userspace can execute the ioctl again later to retry eviction, or\r\n * alternatively can re-add the secret key again.\r\n *\r\n * For more details, see the \"Removing keys\" section of\r\n * Documentation/filesystems/fscrypt.rst.\r\n ",
		"Row": 910,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "STATIC",
		"Literal": "static",
		"Row": 911,
		"Col": 6,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 911,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "do_remove_key",
		"Row": 911,
		"Col": 24,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 911,
		"Col": 25,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 911,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file",
		"Row": 911,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 911,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 911,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 911,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 911,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 911,
		"Col": 55,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 911,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_uarg",
		"Row": 911,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 911,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bool",
		"Row": 911,
		"Col": 68,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "all_users",
		"Row": 911,
		"Col": 78,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 911,
		"Col": 79,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 912,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 913,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 913,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 913,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 913,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 913,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file_inode",
		"Row": 913,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 913,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 913,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 913,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 913,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_sb",
		"Row": 913,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 913,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 914,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_remove_key_arg",
		"Row": 914,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 914,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 914,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 914,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 914,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "_uarg",
		"Row": 914,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 914,
		"Col": 55,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 915,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_remove_key_arg",
		"Row": 915,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 915,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 915,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 916,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 916,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 916,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 916,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 916,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 917,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 917,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 917,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 917,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 917,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "u",
		"Row": 918,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "32",
		"Row": 918,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status_flags",
		"Row": 918,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 918,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 918,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 918,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 919,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 919,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 919,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "bool",
		"Row": 920,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dead",
		"Row": 920,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 920,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 922,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 922,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "copy_from_user",
		"Row": 922,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 922,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 922,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 922,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 922,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 922,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 922,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 922,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 922,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 922,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 922,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 922,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 922,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 923,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 923,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EFAULT",
		"Row": 923,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 923,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 925,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 925,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 925,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "valid_key_spec",
		"Row": 925,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 925,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 925,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 925,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 925,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 925,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 925,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 925,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 926,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 926,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 926,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 926,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 928,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 928,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memchr_inv",
		"Row": 928,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 928,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 928,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 928,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 928,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 928,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 928,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 928,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 928,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 928,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 928,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 928,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 928,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 928,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 928,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 928,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 929,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 929,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 929,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 929,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * Only root can add and remove keys that are identified by an arbitrary\r\n\t * descriptor rather than by a cryptographic hash.\r\n\t ",
		"Row": 934,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 935,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 935,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 935,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 935,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 935,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 935,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "type",
		"Row": 935,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 935,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR",
		"Row": 935,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 935,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 936,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "capable",
		"Row": 936,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 936,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CAP_SYS_ADMIN",
		"Row": 936,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 936,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 936,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 937,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 937,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EACCES",
		"Row": 937,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 937,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " Find the key being removed. ",
		"Row": 939,
		"Col": 34,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 940,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 940,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_find_master_key",
		"Row": 940,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 940,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 940,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 940,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 940,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 940,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 940,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 940,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 940,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 940,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 941,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 941,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 941,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 941,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 941,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 941,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 941,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 942,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 942,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 942,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 942,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 942,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 942,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 943,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 943,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 943,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 943,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 943,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 943,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 943,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 943,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 943,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 943,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 943,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "down_write",
		"Row": 945,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 945,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 945,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 945,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 945,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 945,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 945,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 945,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " If relevant, remove current user's (or all users) claim to the key ",
		"Row": 947,
		"Col": 73,
		"BlockNo": 0
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 948,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 948,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 948,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 948,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 948,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 948,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 948,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 948,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 948,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 948,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keys",
		"Row": 948,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 948,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "nr_leaves_on_tree",
		"Row": 948,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 948,
		"Col": 62,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 948,
		"Col": 64,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 948,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 948,
		"Col": 67,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 949,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 949,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "all_users",
		"Row": 949,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 949,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 950,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 950,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keyring_clear",
		"Row": 950,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 950,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 950,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 950,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 950,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 950,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 950,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "ELSE",
		"Literal": "else",
		"Row": 951,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 952,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 952,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "remove_master_key_user",
		"Row": 952,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 952,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 952,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 952,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 952,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 953,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 953,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 953,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 953,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 953,
		"Col": 18,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "up_write",
		"Row": 954,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 954,
		"Col": 21,
		"BlockNo": 3
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 954,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 954,
		"Col": 25,
		"BlockNo": 3
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 954,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 954,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 954,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 954,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 955,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_put_key",
		"Row": 955,
		"Col": 28,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 955,
		"Col": 29,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 956,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 957,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 957,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 957,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 957,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 957,
		"Col": 24,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 957,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keys",
		"Row": 957,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 957,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "nr_leaves_on_tree",
		"Row": 957,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 957,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 957,
		"Col": 52,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 957,
		"Col": 53,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 957,
		"Col": 55,
		"BlockNo": 3
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t\t\t * Other users have still added the key too.  We removed\r\n\t\t\t * the current user's claim to the key, but we still\r\n\t\t\t * can't remove the key itself.\r\n\t\t\t ",
		"Row": 962,
		"Col": 4,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status_flags",
		"Row": 963,
		"Col": 24,
		"BlockNo": 3
	},
	{
		"Type": "|=",
		"Literal": "|=",
		"Row": 963,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS",
		"Row": 964,
		"Col": 59,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 964,
		"Col": 60,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 965,
		"Col": 15,
		"BlockNo": 3
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 965,
		"Col": 17,
		"BlockNo": 3
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 965,
		"Col": 19,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 965,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "up_write",
		"Row": 966,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 966,
		"Col": 21,
		"BlockNo": 3
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 966,
		"Col": 22,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 966,
		"Col": 25,
		"BlockNo": 3
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 966,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 966,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 966,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 966,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 967,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_put_key",
		"Row": 967,
		"Col": 28,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 967,
		"Col": 29,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 968,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 969,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": " No user claims remaining.  Go ahead and wipe the secret. ",
		"Row": 971,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dead",
		"Row": 972,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 972,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "false",
		"Row": 972,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 972,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 973,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 973,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "is_master_key_secret_present",
		"Row": 973,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 973,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 973,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 973,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 973,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 973,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 973,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 973,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 973,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "wipe_master_key_secret",
		"Row": 974,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 974,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 974,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 974,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 974,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 974,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 974,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 974,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dead",
		"Row": 975,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 975,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "refcount_dec_and_test",
		"Row": 975,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 975,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 975,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 975,
		"Col": 40,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 975,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_refcount",
		"Row": 975,
		"Col": 53,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 975,
		"Col": 54,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 975,
		"Col": 55,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 976,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "up_write",
		"Row": 977,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 977,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 977,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 977,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 977,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 977,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 977,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 977,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 978,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 978,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "dead",
		"Row": 978,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 978,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 978,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t\t * No inodes reference the key, and we wiped the secret, so the\r\n\t\t * key object is free to be removed from the keyring.\r\n\t\t ",
		"Row": 982,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_invalidate",
		"Row": 983,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 983,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 983,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 983,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 983,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 984,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 984,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 984,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 984,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 985,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "ELSE",
		"Literal": "else",
		"Row": 985,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 985,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "COMMENT",
		"Literal": " Some inodes still reference this key; try to evict them. ",
		"Row": 986,
		"Col": 67,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 987,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 987,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "try_to_lock_encrypted_files",
		"Row": 987,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 987,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 987,
		"Col": 44,
		"BlockNo": 2
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 987,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 987,
		"Col": 48,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 987,
		"Col": 49,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 987,
		"Col": 50,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 988,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 988,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 988,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 988,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 988,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EBUSY",
		"Row": 988,
		"Col": 25,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 988,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 988,
		"Col": 28,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status_flags",
		"Row": 989,
		"Col": 24,
		"BlockNo": 3
	},
	{
		"Type": "|=",
		"Literal": "|=",
		"Row": 989,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY",
		"Row": 990,
		"Col": 58,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 990,
		"Col": 59,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 991,
		"Col": 15,
		"BlockNo": 3
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 991,
		"Col": 17,
		"BlockNo": 3
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 991,
		"Col": 19,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 991,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 992,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 993,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n\t * We return 0 if we successfully did something: removed a claim to the\r\n\t * key, wiped the secret, or tried locking the files again.  Users need\r\n\t * to check the informational status flags if they care whether the key\r\n\t * has been fully removed including all files locked.\r\n\t ",
		"Row": 999,
		"Col": 2,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_put_key",
		"Row": 1000,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 1000,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 1001,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1001,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1001,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1001,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1001,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1002,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1002,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1002,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "==",
		"Literal": "==",
		"Row": 1002,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1002,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1002,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1003,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1003,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "put_user",
		"Row": 1003,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1003,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status_flags",
		"Row": 1003,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1003,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1003,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1003,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1003,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "removal_status_flags",
		"Row": 1003,
		"Col": 64,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1003,
		"Col": 65,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1003,
		"Col": 66,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1004,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1004,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1004,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1005,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 1007,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_remove_key",
		"Row": 1007,
		"Col": 28,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1007,
		"Col": 29,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1007,
		"Col": 35,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file",
		"Row": 1007,
		"Col": 40,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1007,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 1007,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1007,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 1007,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 1007,
		"Col": 59,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1007,
		"Col": 61,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1007,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1007,
		"Col": 66,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1008,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1009,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "do_remove_key",
		"Row": 1009,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1009,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 1009,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1009,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1009,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1009,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "false",
		"Row": 1009,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1009,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1009,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1010,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EXPORT_SYMBOL_GPL",
		"Row": 1011,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1011,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_remove_key",
		"Row": 1011,
		"Col": 42,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1011,
		"Col": 43,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1011,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 1013,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_remove_key_all_users",
		"Row": 1013,
		"Col": 38,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1013,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1013,
		"Col": 45,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file",
		"Row": 1013,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1013,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 1013,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1013,
		"Col": 57,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 1013,
		"Col": 62,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 1013,
		"Col": 69,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1013,
		"Col": 71,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1013,
		"Col": 75,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1013,
		"Col": 76,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1014,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1015,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1015,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 1015,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "capable",
		"Row": 1015,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1015,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "CAP_SYS_ADMIN",
		"Row": 1015,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1015,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1015,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1016,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1016,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EACCES",
		"Row": 1016,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1016,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1017,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "do_remove_key",
		"Row": 1017,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1017,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 1017,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1017,
		"Col": 30,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1017,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1017,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "true",
		"Row": 1017,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1017,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1017,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1018,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EXPORT_SYMBOL_GPL",
		"Row": 1019,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1019,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_remove_key_all_users",
		"Row": 1019,
		"Col": 52,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1019,
		"Col": 53,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1019,
		"Col": 54,
		"BlockNo": 0
	},
	{
		"Type": "COMMENT",
		"Literal": "\r\n * Retrieve the status of an fscrypt master encryption key.\r\n *\r\n * We set -\u003estatus to indicate whether the key is absent, present, or\r\n * incompletely removed.  \"Incompletely removed\" means that the master key\r\n * secret has been removed, but some files which had been unlocked with it are\r\n * still in use.  This field allows applications to easily determine the state\r\n * of an encrypted directory without using a hack such as trying to open a\r\n * regular file in it (which can confuse the \"incompletely removed\" state with\r\n * absent or present).\r\n *\r\n * In addition, for v2 policy keys we allow applications to determine, via\r\n * -\u003estatus_flags and -\u003euser_count, whether the key has been added by the\r\n * current user, by other users, or by both.  Most applications should not need\r\n * this, since ordinarily only one user should know a given key.  However, if a\r\n * secret key is shared by multiple users, applications may wish to add an\r\n * already-present key to prevent other users from removing it.  This ioctl can\r\n * be used to check whether that really is the case before the work is done to\r\n * add the key --- which might e.g. require prompting the user for a passphrase.\r\n *\r\n * For more details, see the \"FS_IOC_GET_ENCRYPTION_KEY_STATUS\" section of\r\n * Documentation/filesystems/fscrypt.rst.\r\n ",
		"Row": 1043,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 1044,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_get_key_status",
		"Row": 1044,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1044,
		"Col": 33,
		"BlockNo": 0
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1044,
		"Col": 39,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file",
		"Row": 1044,
		"Col": 44,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1044,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 1044,
		"Col": 50,
		"BlockNo": 0
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1044,
		"Col": 51,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 1044,
		"Col": 56,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__user",
		"Row": 1044,
		"Col": 63,
		"BlockNo": 0
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1044,
		"Col": 65,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1044,
		"Col": 69,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1044,
		"Col": 70,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1045,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1046,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "super_block",
		"Row": 1046,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1046,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 1046,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1046,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "file_inode",
		"Row": 1046,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1046,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "filp",
		"Row": 1046,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1046,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1046,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "i_sb",
		"Row": 1046,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1046,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1047,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_get_key_status_arg",
		"Row": 1047,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1047,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1047,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1048,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1048,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1048,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1048,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1048,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1049,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_master_key",
		"Row": 1049,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1049,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 1049,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1049,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 1050,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1050,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1050,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1052,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1052,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "copy_from_user",
		"Row": 1052,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1052,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1052,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1052,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1052,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1052,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1052,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 1052,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1052,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1052,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1052,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1052,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1052,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1053,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1053,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EFAULT",
		"Row": 1053,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1053,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1055,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1055,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 1055,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "valid_key_spec",
		"Row": 1055,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1055,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1055,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1055,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1055,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 1055,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1055,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1055,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1056,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1056,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 1056,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1056,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1058,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1058,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memchr_inv",
		"Row": 1058,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1058,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1058,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1058,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 1058,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1058,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1058,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1058,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 1058,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1058,
		"Col": 44,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1058,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1058,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__reserved",
		"Row": 1058,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1058,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1058,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1058,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1059,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1059,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EINVAL",
		"Row": 1059,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1059,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1061,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1061,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status_flags",
		"Row": 1061,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1061,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1061,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1061,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1062,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1062,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "user_count",
		"Row": 1062,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1062,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1062,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1062,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "memset",
		"Row": 1063,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1063,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1063,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1063,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__out_reserved",
		"Row": 1063,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1063,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1063,
		"Col": 31,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1063,
		"Col": 32,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 1063,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1063,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1063,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1063,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__out_reserved",
		"Row": 1063,
		"Col": 57,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1063,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1063,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1063,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1065,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1065,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_find_master_key",
		"Row": 1065,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1065,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sb",
		"Row": 1065,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1065,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1065,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1065,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1065,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_spec",
		"Row": 1065,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1065,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1065,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1066,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1066,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 1066,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1066,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1066,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1066,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1066,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1066,
		"Col": 22,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1067,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1067,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1067,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 1067,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ERR_PTR",
		"Row": 1067,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1067,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1067,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 1067,
		"Col": 34,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1067,
		"Col": 35,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1067,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1068,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 1068,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1068,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1068,
		"Col": 30,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1068,
		"Col": 31,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1068,
		"Col": 32,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1069,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1069,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status",
		"Row": 1069,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1069,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_STATUS_ABSENT",
		"Row": 1069,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1069,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1070,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1070,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1070,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1070,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 1071,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out",
		"Row": 1071,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1071,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1072,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 1073,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1073,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1073,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1073,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "payload",
		"Row": 1073,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1073,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "data",
		"Row": 1073,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "[",
		"Literal": "[",
		"Row": 1073,
		"Col": 26,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1073,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "]",
		"Literal": "]",
		"Row": 1073,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1073,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "down_read",
		"Row": 1074,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1074,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1074,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1074,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1074,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 1074,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1074,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1074,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1076,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1076,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 1076,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "is_master_key_secret_present",
		"Row": 1076,
		"Col": 37,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1076,
		"Col": 38,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1076,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 1076,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1076,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_secret",
		"Row": 1076,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1076,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1076,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1076,
		"Col": 56,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1077,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1077,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status",
		"Row": 1077,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1077,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED",
		"Row": 1077,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1077,
		"Col": 60,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1078,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1078,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1078,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1078,
		"Col": 16,
		"BlockNo": 2
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 1079,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_release_key",
		"Row": 1079,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1079,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1080,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1082,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1082,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status",
		"Row": 1082,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1082,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_STATUS_PRESENT",
		"Row": 1082,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1082,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1083,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1083,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 1083,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1083,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 1083,
		"Col": 20,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1083,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1083,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "STRUCT",
		"Literal": "struct",
		"Row": 1084,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1084,
		"Col": 18,
		"BlockNo": 2
	},
	{
		"Type": "*",
		"Literal": "*",
		"Row": 1084,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 1084,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1084,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1086,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1086,
		"Col": 11,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "user_count",
		"Row": 1086,
		"Col": 21,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1086,
		"Col": 23,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 1086,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1086,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_users",
		"Row": 1086,
		"Col": 36,
		"BlockNo": 2
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1086,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "keys",
		"Row": 1086,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1086,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "nr_leaves_on_tree",
		"Row": 1086,
		"Col": 59,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1086,
		"Col": 60,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 1087,
		"Col": 15,
		"BlockNo": 2
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1087,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "find_master_key_user",
		"Row": 1087,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1087,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk",
		"Row": 1087,
		"Col": 41,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1087,
		"Col": 42,
		"BlockNo": 2
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1087,
		"Col": 43,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1088,
		"Col": 10,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1088,
		"Col": 12,
		"BlockNo": 2
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 1088,
		"Col": 13,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "IS_ERR",
		"Row": 1088,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1088,
		"Col": 20,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 1088,
		"Col": 27,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1088,
		"Col": 28,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1088,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1088,
		"Col": 31,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1089,
		"Col": 15,
		"BlockNo": 3
	},
	{
		"Type": "ILLEGAL",
		"Literal": ".",
		"Row": 1089,
		"Col": 15,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "status_flags",
		"Row": 1089,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": "|=",
		"Literal": "|=",
		"Row": 1089,
		"Col": 30,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF",
		"Row": 1090,
		"Col": 53,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1090,
		"Col": 54,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 1091,
		"Col": 19,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1091,
		"Col": 20,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 1091,
		"Col": 27,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1091,
		"Col": 28,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1091,
		"Col": 29,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1092,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "ELSE",
		"Literal": "else",
		"Row": 1092,
		"Col": 14,
		"BlockNo": 2
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1092,
		"Col": 17,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1092,
		"Col": 19,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 1092,
		"Col": 26,
		"BlockNo": 2
	},
	{
		"Type": "!=",
		"Literal": "!=",
		"Row": 1092,
		"Col": 29,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ERR_PTR",
		"Row": 1092,
		"Col": 37,
		"BlockNo": 2
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1092,
		"Col": 38,
		"BlockNo": 2
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1092,
		"Col": 39,
		"BlockNo": 2
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "ENOKEY",
		"Row": 1092,
		"Col": 45,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1092,
		"Col": 46,
		"BlockNo": 2
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1092,
		"Col": 47,
		"BlockNo": 2
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1092,
		"Col": 49,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1093,
		"Col": 15,
		"BlockNo": 3
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1093,
		"Col": 17,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "PTR_ERR",
		"Row": 1093,
		"Col": 25,
		"BlockNo": 3
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1093,
		"Col": 26,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "mk_user",
		"Row": 1093,
		"Col": 33,
		"BlockNo": 3
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1093,
		"Col": 34,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1093,
		"Col": 35,
		"BlockNo": 3
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 1094,
		"Col": 16,
		"BlockNo": 3
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_release_key",
		"Row": 1094,
		"Col": 32,
		"BlockNo": 3
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1094,
		"Col": 33,
		"BlockNo": 3
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1095,
		"Col": 9,
		"BlockNo": 2
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1096,
		"Col": 5,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1097,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1097,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1097,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1097,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out_release_key",
		"Row": 1098,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 1098,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "up_read",
		"Row": 1099,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1099,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1099,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1099,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": "-\u003e",
		"Literal": "-\u003e",
		"Row": 1099,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "sem",
		"Row": 1099,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1099,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1099,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_put",
		"Row": 1100,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1100,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key",
		"Row": 1100,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1100,
		"Col": 16,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1100,
		"Col": 17,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "out",
		"Row": 1101,
		"Col": 3,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 1101,
		"Col": 4,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1102,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1102,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "!",
		"Literal": "!",
		"Row": 1102,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1102,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "\u0026\u0026",
		"Literal": "\u0026\u0026",
		"Row": 1102,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "copy_to_user",
		"Row": 1102,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1102,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "uarg",
		"Row": 1102,
		"Col": 33,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1102,
		"Col": 34,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1102,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1102,
		"Col": 39,
		"BlockNo": 1
	},
	{
		"Type": ",",
		"Literal": ",",
		"Row": 1102,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": "SIZEOF",
		"Literal": "sizeof",
		"Row": 1102,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1102,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "arg",
		"Row": 1102,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1102,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1102,
		"Col": 53,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1102,
		"Col": 54,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1103,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1103,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "-",
		"Literal": "-",
		"Row": 1103,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EFAULT",
		"Row": 1103,
		"Col": 21,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1103,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1104,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1104,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1104,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1105,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "EXPORT_SYMBOL_GPL",
		"Row": 1106,
		"Col": 17,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1106,
		"Col": 18,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_ioctl_get_key_status",
		"Row": 1106,
		"Col": 46,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1106,
		"Col": 47,
		"BlockNo": 0
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1106,
		"Col": 48,
		"BlockNo": 0
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 1108,
		"Col": 3,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "__init",
		"Row": 1108,
		"Col": 10,
		"BlockNo": 0
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "fscrypt_init_keyring",
		"Row": 1108,
		"Col": 31,
		"BlockNo": 0
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1108,
		"Col": 32,
		"BlockNo": 0
	},
	{
		"Type": "VOID",
		"Literal": "void",
		"Row": 1108,
		"Col": 36,
		"BlockNo": 0
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1108,
		"Col": 37,
		"BlockNo": 0
	},
	{
		"Type": "{",
		"Literal": "{",
		"Row": 1109,
		"Col": 1,
		"BlockNo": 1
	},
	{
		"Type": "INT",
		"Literal": "int",
		"Row": 1110,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1110,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1110,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1112,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1112,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "register_key_type",
		"Row": 1112,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1112,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1112,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt",
		"Row": 1112,
		"Col": 45,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1112,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1112,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1113,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1113,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1113,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1113,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1114,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1114,
		"Col": 18,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1114,
		"Col": 19,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1116,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1116,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "register_key_type",
		"Row": 1116,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1116,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1116,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_user",
		"Row": 1116,
		"Col": 50,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1116,
		"Col": 51,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1116,
		"Col": 52,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1117,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1117,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1117,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1117,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 1118,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err_unregister_fscrypt",
		"Row": 1118,
		"Col": 35,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1118,
		"Col": 36,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1120,
		"Col": 7,
		"BlockNo": 1
	},
	{
		"Type": "=",
		"Literal": "=",
		"Row": 1120,
		"Col": 9,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "register_key_type",
		"Row": 1120,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1120,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1120,
		"Col": 29,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_provisioning",
		"Row": 1120,
		"Col": 58,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1120,
		"Col": 59,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1120,
		"Col": 60,
		"BlockNo": 1
	},
	{
		"Type": "IF",
		"Literal": "if",
		"Row": 1121,
		"Col": 6,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1121,
		"Col": 8,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1121,
		"Col": 11,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1121,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "GOTO",
		"Literal": "goto",
		"Row": 1122,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err_unregister_fscrypt_user",
		"Row": 1122,
		"Col": 40,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1122,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1124,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "INTEGER",
		"Literal": "0",
		"Row": 1124,
		"Col": 12,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1124,
		"Col": 13,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err_unregister_fscrypt_user",
		"Row": 1126,
		"Col": 27,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 1126,
		"Col": 28,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "unregister_key_type",
		"Row": 1127,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1127,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1127,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt_user",
		"Row": 1127,
		"Col": 46,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1127,
		"Col": 47,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1127,
		"Col": 48,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err_unregister_fscrypt",
		"Row": 1128,
		"Col": 22,
		"BlockNo": 1
	},
	{
		"Type": ":",
		"Literal": ":",
		"Row": 1128,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "unregister_key_type",
		"Row": 1129,
		"Col": 23,
		"BlockNo": 1
	},
	{
		"Type": "(",
		"Literal": "(",
		"Row": 1129,
		"Col": 24,
		"BlockNo": 1
	},
	{
		"Type": "\u0026",
		"Literal": "\u0026",
		"Row": 1129,
		"Col": 25,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "key_type_fscrypt",
		"Row": 1129,
		"Col": 41,
		"BlockNo": 1
	},
	{
		"Type": ")",
		"Literal": ")",
		"Row": 1129,
		"Col": 42,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1129,
		"Col": 43,
		"BlockNo": 1
	},
	{
		"Type": "RETURN",
		"Literal": "return",
		"Row": 1130,
		"Col": 10,
		"BlockNo": 1
	},
	{
		"Type": "IDENTIFIER",
		"Literal": "err",
		"Row": 1130,
		"Col": 14,
		"BlockNo": 1
	},
	{
		"Type": ";",
		"Literal": ";",
		"Row": 1130,
		"Col": 15,
		"BlockNo": 1
	},
	{
		"Type": "}",
		"Literal": "}",
		"Row": 1131,
		"Col": 1,
		"BlockNo": 0
	},
	{
		"Type": "EOF",
		"Literal": "",
		"Row": 1131,
		"Col": 1,
		"BlockNo": 0
	}
]